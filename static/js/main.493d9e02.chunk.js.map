{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","exportModule","addContact","createAction","text","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","name","number","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","Container","children","className","s","connect","dispatch","onDeleteContact","contactId","contact","ContactList__item","ContactList__text","type","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","title","ContactList","map","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","console","warn","validateForm","isExistContact","find","alert","ContactForm","preventDefault","autoComplete","input","onChange","button","event","label","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.493d9e02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3jOyI\",\"ContactList\":\"ContactList_ContactList__1jMSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactItem_ContactList__item__1D2QB\",\"ContactList__text\":\"ContactItem_ContactList__text__2SmSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__10gzN\",\"input\":\"Filter_input__3N1KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11kA7\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('app/addContact', text => ({\n  payload: { id: shortid.generate(), text },\n}));\n\nconst deleteContact = createAction('app/deleteContact');\nconst changeFilter = createAction('app/changeFilter');\n\nconst exportModule = { addContact, deleteContact, changeFilter };\n\nexport default exportModule;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nconst exportModule = { store, persistor };\n\nexport default exportModule;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <>\n    <li className={s.ContactList__item}>\n      <p className={s.ContactList__text}>\n        <span>{name}</span> : <span>{number}</span>\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(actions.deleteContact(contactId)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.ContactList}>\n        {contacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\n// const INITIAL_STATE = { name: \"\", number: \"\" };\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Тип поля name - ${name} не обрабатывается!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n    onSubmit(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some fields are empty! Please write something');\n      return;\n    }\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>Phonebook</h2>\n      <form className={s.ContactForm} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name:\n    <input className={s.input} type=\"text\" value={filter} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = state => ({ filter: state.contacts.filter });\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event => dispatch(actions.changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nfunction App({ contacts }) {\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\n//Пропсы которые будут приходить в компонент\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__2kqid\",\"ContactForm\":\"ContactForm_ContactForm__3U2Kr\",\"input\":\"ContactForm_input__3q0bj\",\"button\":\"ContactForm_button__tkRw8\"};"],"sourceRoot":""}