{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","components/ContactItem/ContactItem.js","redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","actionTypes","ADD","DELETE","CHANGE_FILTER","localStorageData","JSON","parse","window","localStorage","getItem","initialState","id","name","number","combineReducers","items","state","type","payload","filter","contact","store","createStore","contacts","rootreducer","composeWithDevTools","Container","children","className","s","connect","dispatch","onDeleteContact","contactId","deleteContact","ContactList__item","ContactList__text","onClick","title","ContactList","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","onSubmit","shortid","generate","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","console","warn","validateForm","isExistContact","find","alert","ContactForm","preventDefault","autoComplete","input","onChange","button","label","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79b0d5c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3jOyI\",\"ContactList\":\"ContactList_ContactList__1jMSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactItem_ContactList__item__1D2QB\",\"ContactList__text\":\"ContactItem_ContactList__text__2SmSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__10gzN\",\"input\":\"Filter_input__3N1KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11kA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__2kqid\",\"ContactForm\":\"ContactForm_ContactForm__3U2Kr\",\"input\":\"ContactForm_input__3q0bj\",\"button\":\"ContactForm_button__tkRw8\"};","const ADD = 'app/addContact';\nconst DELETE = 'app/deleteContact';\nconst CHANGE_FILTER = 'app/changeFilter';\n\nconst actionTypes = { ADD, DELETE, CHANGE_FILTER };\n\nexport default actionTypes;\n\n// export default {\n//   ADD: 'app/addContact',\n//   DELETE: 'app/deleteContact',\n//   CHANGE_FILTER: 'app/changeFilter',\n// };\n","import { combineReducers } from 'redux';\nimport actionTypes from './contacts-types';\n\nconst localStorageData = JSON.parse(window.localStorage.getItem('contacts'));\n\nconst initialState = localStorageData ?? [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contactsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.ADD:\n      return [...state, payload];\n    case actionTypes.DELETE:\n      return state.filter(contact => contact.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootreducer from './contacts/contacts-reducer';\n\nconst store = createStore(\n  combineReducers({\n    contacts: rootreducer,\n  }),\n  composeWithDevTools(),\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <>\n    <li className={s.ContactList__item}>\n      <p className={s.ContactList__text}>\n        <span>{name}</span> : <span>{number}</span>\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import shortid from 'shortid';\nimport actionTypes from './contacts-types';\n\nexport const addContact = (name, number) => {\n  return {\n    type: actionTypes.ADD,\n    payload: { name, number, id: shortid.generate() },\n  };\n};\n\nexport const deleteContact = contactId => ({\n  type: actionTypes.DELETE,\n  payload: contactId,\n});\n\nexport const changeFilter = event => ({\n  type: actionTypes.CHANGE_FILTER,\n  payload: event.currentTarget.value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, filter }) => {\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.ContactList}>\n        {getVisibleContacts(contacts).map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, null)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\n// const INITIAL_STATE = { name: \"\", number: \"\" };\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Тип поля name - ${name} не обрабатывается!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n    onSubmit(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some fields are empty! Please write something');\n      return;\n    }\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>Phonebook</h2>\n      <form className={s.ContactForm} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name:\n    <input className={s.input} type=\"text\" value={filter} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = state => ({ filter: state.contacts.filter });\nconst mapDispatchToProps = dispatch => ({\n  onChange: filter => dispatch(changeFilter(filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\n//Пропсы которые будут приходить в компонент\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}