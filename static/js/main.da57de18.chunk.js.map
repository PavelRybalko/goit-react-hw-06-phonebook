{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","components/ContactItem/ContactItem.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","exportModule","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","Container","children","className","s","ContactItem","contact","dispatch","useDispatch","ContactList__item","ContactList__text","type","onClick","getItems","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","title","map","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","console","warn","validateForm","isExistContact","find","alert","onSubmit","preventDefault","autoComplete","input","onChange","button","Filter","label","event","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.da57de18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3jOyI\",\"ContactList\":\"ContactList_ContactList__1jMSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactItem_ContactList__item__1D2QB\",\"ContactList__text\":\"ContactItem_ContactList__text__2SmSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__10gzN\",\"input\":\"Filter_input__3N1KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11kA7\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('app/addContact', (name, number) => ({\n  payload: { id: shortid.generate(), name, number },\n}));\n\nconst deleteContact = createAction('app/deleteContact');\nconst changeFilter = createAction('app/changeFilter');\n\nconst exportModule = { addContact, deleteContact, changeFilter };\n\nexport default exportModule;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(initialState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nconst exportModule = { store, persistor };\n\nexport default exportModule;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <li className={s.ContactList__item}>\n        <p className={s.ContactList__text}>\n          <span>{name}</span> : <span>{number}</span>\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(actions.deleteContact(id))}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    number: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul className={s.ContactList}>\n        {contacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Тип поля name - ${name} не обрабатывается!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n    dispatch(actions.addContact(name, number));\n\n    setName('');\n    setNumber('');\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some fields are empty! Please write something');\n      return;\n    }\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  return (\n    <>\n      <h2 className={s.title}>Phonebook</h2>\n      <form className={s.ContactForm} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            autoComplete=\"off\"\n            className={s.input}\n            name=\"number\"\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={event =>\n          dispatch(actions.changeFilter(event.currentTarget.value))\n        }\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__2kqid\",\"ContactForm\":\"ContactForm_ContactForm__3U2Kr\",\"input\":\"ContactForm_input__3q0bj\",\"button\":\"ContactForm_button__tkRw8\"};"],"sourceRoot":""}